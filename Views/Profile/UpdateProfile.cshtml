@model RandevuSistemi.Models.AdminSiniflar.Hairdresser
@{
    ViewData["Title"] = "UpdateProfile";
    Layout = "~/Views/BarberLayout/Index.cshtml";
}

<style>
    .update-container {
        background-color: #f8f9fa;
        min-height: 100vh;
        padding: 30px 0;
    }
    
    .update-card {
        background: white;
        border-radius: 8px;
        box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
        border: 1px solid #e9ecef;
        overflow: hidden;
        max-width: 500px;
        margin: 0 auto;
    }
    
    .update-header {
        background: #212529;
        color: white;
        padding: 30px;
        text-align: center;
        border-bottom: 1px solid #dee2e6;
    }
    
    .update-avatar {
        width: 60px;
        height: 60px;
        border-radius: 50%;
        background: #6c757d;
        display: flex;
        align-items: center;
        justify-content: center;
        margin: 0 auto 15px;
        font-size: 20px;
        color: white;
    }
    
    .update-title {
        font-size: 20px;
        font-weight: 600;
        margin: 0;
        color: white;
    }
    
    .update-form {
        padding: 30px;
    }
    
    .form-group {
        margin-bottom: 20px;
    }
    
    .form-label {
        display: block;
        font-size: 13px;
        font-weight: 600;
        color: #495057;
        margin-bottom: 6px;
        text-transform: uppercase;
        letter-spacing: 0.5px;
    }
    
    .form-control {
        width: 100%;
        padding: 12px 16px;
        border: 1px solid #ced4da;
        border-radius: 4px;
        font-size: 14px;
        background: white;
        color: #495057;
        box-sizing: border-box;
    }
    
    .form-control:focus {
        outline: none;
        border-color: #212529;
        box-shadow: 0 0 0 2px rgba(33, 37, 41, 0.1);
    }
    
    .form-control:hover {
        border-color: #adb5bd;
    }
    
    .input-group {
        position: relative;
    }
    
    .input-icon {
        position: absolute;
        right: 12px;
        top: 50%;
        transform: translateY(-50%);
        color: #adb5bd;
        font-size: 14px;
        pointer-events: none;
    }
    
    .btn-container {
        display: flex;
        gap: 10px;
        margin-top: 30px;
    }
    
    .btn-primary {
        flex: 1;
        background: #212529;
        border: 1px solid #212529;
        color: white;
        padding: 12px 20px;
        border-radius: 4px;
        font-size: 14px;
        font-weight: 500;
        cursor: pointer;
    }
    
    .btn-primary:hover {
        background: #343a40;
        border-color: #343a40;
    }
    
    .btn-secondary {
        flex: 1;
        background: white;
        border: 1px solid #ced4da;
        color: #6c757d;
        padding: 12px 20px;
        border-radius: 4px;
        font-size: 14px;
        font-weight: 500;
        cursor: pointer;
        text-decoration: none;
        display: flex;
        align-items: center;
        justify-content: center;
        gap: 6px;
    }
    
    .btn-secondary:hover {
        background: #f8f9fa;
        border-color: #adb5bd;
        color: #6c757d;
        text-decoration: none;
    }
    
    .password-toggle {
        position: absolute;
        right: 12px;
        top: 50%;
        transform: translateY(-50%);
        background: none;
        border: none;
        color: #adb5bd;
        cursor: pointer;
        font-size: 14px;
        z-index: 2;
    }
    
    .password-toggle:hover {
        color: #6c757d;
    }
    
    .validation-error {
        color: #dc3545;
        font-size: 11px;
        margin-top: 4px;
        font-weight: 500;
    }
    
    @@media (max-width: 768px) {
        .update-form {
            padding: 20px;
        }
        
        .update-header {
            padding: 20px;
        }
        
        .btn-container {
            flex-direction: column;
        }
        
        .update-card {
            margin: 0 15px;
        }
    }
</style>

<div class="update-container">
    <div class="container">
        <div class="update-card">
            <div class="update-header">
                <div class="update-avatar">
                    <i class="fas fa-user-edit"></i>
                </div>
                <h1 class="update-title">Profil Güncelle</h1>
            </div>
            
            <div class="update-form">
                @using (Html.BeginForm("UpdateProfile", "Profile", FormMethod.Post))
                {
                    @Html.HiddenFor(m => m.HairdresserID)
                    
                    <div class="form-group">
                        <label class="form-label">İsim Soyisim</label>
                        <div class="input-group">
                            @Html.TextBoxFor(m => m.Name, new { @class = "form-control" })
                            <i class="fas fa-user input-icon"></i>
                        </div>
                        @Html.ValidationMessageFor(m => m.Name, "", new { @class = "validation-error" })
                    </div>
                    
                    <div class="form-group">
                        <label class="form-label">E-Posta Adresi</label>
                        <div class="input-group">
                            @Html.TextBoxFor(m => m.Email, new { @class = "form-control", @type = "email" })
                            <i class="fas fa-envelope input-icon"></i>
                        </div>
                        @Html.ValidationMessageFor(m => m.Email, "", new { @class = "validation-error" })
                    </div>
                    
                    <div class="form-group">
                        <label class="form-label">Telefon Numarası</label>
                        <div class="input-group">
                            @Html.TextBoxFor(m => m.Phone, new { @class = "form-control" })
                            <i class="fas fa-phone input-icon"></i>
                        </div>
                        @Html.ValidationMessageFor(m => m.Phone, "", new { @class = "validation-error" })
                    </div>
                    
                    <div class="form-group">
                        <label class="form-label">Kullanıcı Adı</label>
                        <div class="input-group">
                            @Html.TextBoxFor(m => m.Role, new { @class = "form-control" })
                            <i class="fas fa-user-tag input-icon"></i>
                        </div>
                        @Html.ValidationMessageFor(m => m.Role, "", new { @class = "validation-error" })
                    </div>
                    
                    <div class="form-group">
                        <label class="form-label">Şifre</label>
                        <div class="input-group">
                            @Html.PasswordFor(m => m.Password, new { @class = "form-control", @id = "passwordField" })
                            <button type="button" class="password-toggle" onclick="togglePassword()">
                                <i class="fas fa-eye" id="passwordIcon"></i>
                            </button>
                        </div>
                        @Html.ValidationMessageFor(m => m.Password, "", new { @class = "validation-error" })
                    </div>
                    
                    <div class="btn-container">
                        <button type="submit" class="btn-primary">
                            <i class="fas fa-save"></i>
                            Güncelle
                        </button>
                        <a href="@Url.Action("Index")" class="btn-secondary">
                            <i class="fas fa-arrow-left"></i>
                            Geri Dön
                        </a>
                    </div>
                }
            </div>
        </div>
    </div>
</div>

<script>
    function togglePassword() {
        const passwordField = document.getElementById('passwordField');
        const passwordIcon = document.getElementById('passwordIcon');
        
        if (passwordField.type === 'password') {
            passwordField.type = 'text';
            passwordIcon.classList.remove('fa-eye');
            passwordIcon.classList.add('fa-eye-slash');
        } else {
            passwordField.type = 'password';
            passwordIcon.classList.remove('fa-eye-slash');
            passwordIcon.classList.add('fa-eye');
        }
    }

    document.addEventListener("DOMContentLoaded", function() {
        const form = document.querySelector('form');
        form.addEventListener("submit", function(e) {
            e.preventDefault();
            Swal.fire({
                position: "top-end",
                icon: "success",
                title: "Profil bilgileriniz güncellendi!",
                showConfirmButton: false,
                timer: 1500
            });
            setTimeout(() => {
                form.submit();
            }, 1500);
        });
    });
</script>

<link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>